// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/pilly-io/metrics-collector/internal/db (interfaces: Database)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	time "time"
)

// MockDatabase is a mock of Database interface
type MockDatabase struct {
	ctrl     *gomock.Controller
	recorder *MockDatabaseMockRecorder
}

// MockDatabaseMockRecorder is the mock recorder for MockDatabase
type MockDatabaseMockRecorder struct {
	mock *MockDatabase
}

// NewMockDatabase creates a new mock instance
func NewMockDatabase(ctrl *gomock.Controller) *MockDatabase {
	mock := &MockDatabase{ctrl: ctrl}
	mock.recorder = &MockDatabaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDatabase) EXPECT() *MockDatabaseMockRecorder {
	return m.recorder
}

// DeleteOldCachedData mocks base method
func (m *MockDatabase) DeleteOldCachedData(arg0 time.Duration) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteOldCachedData", arg0)
}

// DeleteOldCachedData indicates an expected call of DeleteOldCachedData
func (mr *MockDatabaseMockRecorder) DeleteOldCachedData(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteOldCachedData", reflect.TypeOf((*MockDatabase)(nil).DeleteOldCachedData), arg0)
}

// DeleteSentMetrics mocks base method
func (m *MockDatabase) DeleteSentMetrics() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteSentMetrics")
}

// DeleteSentMetrics indicates an expected call of DeleteSentMetrics
func (mr *MockDatabaseMockRecorder) DeleteSentMetrics() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSentMetrics", reflect.TypeOf((*MockDatabase)(nil).DeleteSentMetrics))
}

// Insert mocks base method
func (m *MockDatabase) Insert(arg0 interface{}) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Insert", arg0)
}

// Insert indicates an expected call of Insert
func (mr *MockDatabaseMockRecorder) Insert(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockDatabase)(nil).Insert), arg0)
}

// Migrate mocks base method
func (m *MockDatabase) Migrate() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Migrate")
}

// Migrate indicates an expected call of Migrate
func (mr *MockDatabaseMockRecorder) Migrate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Migrate", reflect.TypeOf((*MockDatabase)(nil).Migrate))
}
